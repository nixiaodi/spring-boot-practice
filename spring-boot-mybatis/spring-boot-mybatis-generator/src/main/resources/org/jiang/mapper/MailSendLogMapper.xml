<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jiang.mapper.MailSendLogMapper">
  <resultMap id="BaseResultMap" type="org.jiang.model.MailSendLog">
    <result column="msgId" jdbcType="VARCHAR" property="msgid" />
    <result column="empId" jdbcType="INTEGER" property="empid" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="routeKey" jdbcType="VARCHAR" property="routekey" />
    <result column="exchange" jdbcType="VARCHAR" property="exchange" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="tryTime" jdbcType="DATE" property="trytime" />
    <result column="createTime" jdbcType="DATE" property="createtime" />
    <result column="updateTime" jdbcType="DATE" property="updatetime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    msgId, empId, status, routeKey, exchange, count, tryTime, createTime, updateTime
  </sql>
  <select id="selectByExample" parameterType="org.jiang.model.MailSendLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mail_send_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.jiang.model.MailSendLogExample">
    delete from mail_send_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.jiang.model.MailSendLog">
    insert into mail_send_log (msgId, empId, status, 
      routeKey, exchange, count, 
      tryTime, createTime, updateTime
      )
    values (#{msgid,jdbcType=VARCHAR}, #{empid,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{routekey,jdbcType=VARCHAR}, #{exchange,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, 
      #{trytime,jdbcType=DATE}, #{createtime,jdbcType=DATE}, #{updatetime,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.jiang.model.MailSendLog">
    insert into mail_send_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="msgid != null">
        msgId,
      </if>
      <if test="empid != null">
        empId,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="routekey != null">
        routeKey,
      </if>
      <if test="exchange != null">
        exchange,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="trytime != null">
        tryTime,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="msgid != null">
        #{msgid,jdbcType=VARCHAR},
      </if>
      <if test="empid != null">
        #{empid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="routekey != null">
        #{routekey,jdbcType=VARCHAR},
      </if>
      <if test="exchange != null">
        #{exchange,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="trytime != null">
        #{trytime,jdbcType=DATE},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=DATE},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.jiang.model.MailSendLogExample" resultType="java.lang.Long">
    select count(*) from mail_send_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mail_send_log
    <set>
      <if test="record.msgid != null">
        msgId = #{record.msgid,jdbcType=VARCHAR},
      </if>
      <if test="record.empid != null">
        empId = #{record.empid,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.routekey != null">
        routeKey = #{record.routekey,jdbcType=VARCHAR},
      </if>
      <if test="record.exchange != null">
        exchange = #{record.exchange,jdbcType=VARCHAR},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.trytime != null">
        tryTime = #{record.trytime,jdbcType=DATE},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=DATE},
      </if>
      <if test="record.updatetime != null">
        updateTime = #{record.updatetime,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mail_send_log
    set msgId = #{record.msgid,jdbcType=VARCHAR},
      empId = #{record.empid,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      routeKey = #{record.routekey,jdbcType=VARCHAR},
      exchange = #{record.exchange,jdbcType=VARCHAR},
      count = #{record.count,jdbcType=INTEGER},
      tryTime = #{record.trytime,jdbcType=DATE},
      createTime = #{record.createtime,jdbcType=DATE},
      updateTime = #{record.updatetime,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>